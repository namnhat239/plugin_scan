{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/packages/utils/src/legacy.js","webpack:///external \"jQuery\""],"names":["$","body","window","spShared","init","document","unformatCurrency","amount","Math","abs","accounting","unformat","spGeneral","strings","decimalSeparator","formatCurrency","_includeSymbol","_currencySymbol","_isZeroDecimal","includeSymbol","currencySymbol","isZeroDecimal","format","args","currencyPosition","symbol","decimal","thousand","thousandSeparator","precision","integers","decimalPlaces","formatMoney","convertToDollars","booleans","toFixed","convertToCents","Number","validateAndUpdateAmountInput","el","val","globalMinAmount","minAmount","hasClass","type","debugLog","key","value","scriptDebug","console","log","ready","jQuery"],"mappings":"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","file":"simpay-public-shared.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/packages/utils/src/legacy.js\");\n","/* global spGeneral, jQuery, accounting */\n\n( function ( $ ) {\n\t'use strict';\n\n\tlet body;\n\n\twindow.spShared = {\n\t\tinit() {\n\t\t\tbody = $( document.body );\n\t\t},\n\n\t\t/**\n\t\t * Return amount as number value.\n\t\t * Uses global decimal separator setting (\".\" or \",\").\n\t\t * accounting.unformat removes formatting/cruft first.\n\t\t * Respects decimal separator, but ignores zero decimal currency setting.\n\t\t * Also prevent negative values.\n\t\t *\n\t\t * @param amount\n\t\t * @return number\n\t\t */\n\t\tunformatCurrency( amount ) {\n\t\t\treturn Math.abs(\n\t\t\t\taccounting.unformat(\n\t\t\t\t\tamount,\n\t\t\t\t\tspGeneral.strings.decimalSeparator\n\t\t\t\t)\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Return amount as formatted string.\n\t\t * With or without currency symbol.\n\t\t * Used for labels & amount inputs in admin & front-end.\n\t\t * Uses global currency settings.\n\t\t *\n\t\t * @param amount\n\t\t * @param _includeSymbol\n\t\t * @param _currencySymbol\n\t\t * @param _isZeroDecimal\n\t\t * @return string\n\t\t */\n\t\tformatCurrency(\n\t\t\tamount,\n\t\t\t_includeSymbol,\n\t\t\t_currencySymbol,\n\t\t\t_isZeroDecimal\n\t\t) {\n\t\t\tconst includeSymbol = _includeSymbol || false;\n\t\t\tconst currencySymbol =\n\t\t\t\t_currencySymbol || spGeneral.strings.currencySymbol;\n\t\t\tconst isZeroDecimal = _isZeroDecimal || false;\n\n\t\t\t// Default format is to the left with no space.\n\t\t\tlet format = '%s%v',\n\t\t\t\targs;\n\n\t\t\tif ( includeSymbol ) {\n\t\t\t\t// Account for other symbol placement formats (besides default left without space).\n\t\t\t\tswitch ( spGeneral.strings.currencyPosition ) {\n\t\t\t\t\tcase 'left_space':\n\t\t\t\t\t\tformat = '%s %v'; // Left side with space\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'right':\n\t\t\t\t\t\tformat = '%v%s'; // Right side without space\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'right_space':\n\t\t\t\t\t\tformat = '%v %s'; // Right side with space\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\targs = {\n\t\t\t\tsymbol: includeSymbol ? currencySymbol : '',\n\t\t\t\tdecimal: spGeneral.strings.decimalSeparator,\n\t\t\t\tthousand: spGeneral.strings.thousandSeparator,\n\t\t\t\tprecision: isZeroDecimal ? 0 : spGeneral.integers.decimalPlaces,\n\t\t\t\tformat,\n\t\t\t};\n\n\t\t\treturn accounting.formatMoney( amount, args );\n\t\t},\n\n\t\t/**\n\t\t * Convert from cents to dollars (in USD).\n\t\t * Uses global zero decimal currency setting.\n\t\t * Leaves zero decimal currencies alone.\n\t\t *\n\t\t * @param amount\n\t\t * @return number\n\t\t */\n\t\tconvertToDollars( amount ) {\n\t\t\tif ( ! spGeneral.booleans.isZeroDecimal ) {\n\t\t\t\tamount = accounting.toFixed( amount / 100, 2 );\n\t\t\t}\n\n\t\t\treturn amount;\n\t\t},\n\n\t\t/**\n\t\t * Convert from dollars to cents (in USD).\n\t\t * Uses global zero decimal currency setting.\n\t\t * Leaves zero decimal currencies alone.\n\t\t *\n\t\t * @param amount\n\t\t * @return number\n\t\t */\n\t\tconvertToCents( amount ) {\n\t\t\tif ( ! spGeneral.booleans.isZeroDecimal ) {\n\t\t\t\tamount = Number( accounting.toFixed( amount * 100, 0 ) );\n\t\t\t}\n\n\t\t\treturn amount;\n\t\t},\n\n\t\t/**\n\t\t * Validate amount field client-side and update according to rules set by CSS classes.\n\t\t * Some fields display blank instead of \"0.00\" or \"0\".\n\t\t * Some fields require a minimum of \"1.00\" or \"100\" (100 currency units).\n\t\t * Invalid characters and the negative symbol will be removed.\n\t\t *\n\t\t * @param {jQuery} Input to validate.\n\t\t * @param el\n\t\t */\n\t\tvalidateAndUpdateAmountInput( el ) {\n\t\t\t// Amount is intially a string.\n\t\t\tlet amount = el.val();\n\n\t\t\tconst globalMinAmount = Math.abs( spGeneral.integers.minAmount );\n\n\t\t\t// Convert amount to number value.\n\t\t\tamount = spShared.unformatCurrency( amount );\n\n\t\t\t// Update amount field to blank if specific class is present.\n\t\t\t// If zero, convert to blank and exit function.\n\t\t\t// Ex: Default Custom Amount, Setup Fee\n\t\t\tif ( el.hasClass( 'simpay-allow-blank-amount' ) ) {\n\t\t\t\tif ( 0 === amount ) {\n\t\t\t\t\tel.val( '' );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Validate & update fields to the global minimum amount (usually $1.00) if specific class is present.\n\t\t\t// Namely this is just on admin pages, separate from the custom amount minimum amount set per form.\n\t\t\t// Ex: One-Time Amount, Minimum Custom Amount\n\t\t\tif ( el.hasClass( 'simpay-minimum-amount-required' ) ) {\n\t\t\t\tif ( amount < globalMinAmount ) {\n\t\t\t\t\tamount = globalMinAmount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Convert amount back to string with proper thousands & decimal separators, but without symbol.\n\t\t\tamount = spShared.formatCurrency( amount, false );\n\n\t\t\t// Update format price string in input field.\n\t\t\t// Exception: If they changed to 'number' type via filters don't reformat (default type is 'tel').\n\t\t\tif ( 'number' !== el[ 0 ].type ) {\n\t\t\t\tel.val( amount );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Log debug messages to console.\n\t\t * Alternative to console.log so doesn't show up in production environments.\n\t\t * Instead, only if SCRIPT_DEBUG PHP constant set to true.\n\t\t *\n\t\t * @param key\n\t\t * @param value\n\t\t */\n\t\tdebugLog( key, value ) {\n\t\t\tif (\n\t\t\t\t'undefined' !== typeof spGeneral &&\n\t\t\t\ttrue === spGeneral.booleans.scriptDebug\n\t\t\t) {\n\t\t\t\tconsole.log( key, value );\n\t\t\t}\n\t\t},\n\t};\n\n\t$( document ).ready( function ( $ ) {\n\t\twindow.spShared.init();\n\t} );\n} )( jQuery );\n","module.exports = jQuery;"],"sourceRoot":""}